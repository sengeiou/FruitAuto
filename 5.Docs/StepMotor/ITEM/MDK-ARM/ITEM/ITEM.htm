<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [ITEM\ITEM.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image ITEM\ITEM.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Mon May 13 12:06:44 2019
<BR><P>
<H3>Maximum Stack Usage =       1016 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; SetModeCheck &rArr; CalibrateEncoder &rArr; OneStep &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[10]">ADC1_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[10]">ADC1_IRQHandler</a><BR>
 <LI><a href="#[2]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[2]">HardFault_Handler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[10]">ADC1_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[d]">DMA1_Channel1_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[e]">DMA1_Channel2_3_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[f]">DMA1_Channel4_5_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[a]">EXTI0_1_IRQHandler</a> from stm32f0xx_it.o(i.EXTI0_1_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[b]">EXTI2_3_IRQHandler</a> from stm32f0xx_it.o(i.EXTI2_3_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[c]">EXTI4_15_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[8]">FLASH_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from stm32f0xx_it.o(i.HardFault_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[19]">I2C1_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1a]">I2C2_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from stm32f0xx_it.o(i.NMI_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from stm32f0xx_it.o(i.PendSV_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[9]">RCC_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[7]">RTC_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1b]">SPI1_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1c]">SPI2_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from stm32f0xx_it.o(i.SVC_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from stm32f0xx_it.o(i.SysTick_Handler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[20]">SystemInit</a> from system_stm32f0xx.o(i.SystemInit) referenced from startup_stm32f030x8.o(.text)
 <LI><a href="#[15]">TIM14_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[16]">TIM15_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[17]">TIM16_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[18]">TIM17_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[11]">TIM1_BRK_UP_TRG_COM_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[12]">TIM1_CC_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[13]">TIM3_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[14]">TIM6_IRQHandler</a> from stm32f0xx_it.o(i.TIM6_IRQHandler) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1d]">USART1_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[1e]">USART2_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[6]">WWDG_IRQHandler</a> from startup_stm32f030x8.o(.text) referenced from startup_stm32f030x8.o(RESET)
 <LI><a href="#[21]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_stm32f030x8.o(.text)
 <LI><a href="#[1f]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[21]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(.text)
</UL>
<P><STRONG><a name="[7f]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[22]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[3c]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[80]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[81]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[82]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[83]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[84]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>ADC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[10]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC1_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>DMA1_Channel1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>DMA1_Channel2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_Channel4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EXTI4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TIM15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TIM16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[18]"></a>TIM17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>TIM1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[12]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f030x8.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[25]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintShortInt
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
</UL>

<P><STRONG><a name="[86]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[24]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mod
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[26]"></a>__aeabi_fadd</STRONG> (Thumb, 162 bytes, Stack size 24 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
<LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_frsub
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>

<P><STRONG><a name="[29]"></a>__aeabi_fsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>

<P><STRONG><a name="[2a]"></a>__aeabi_frsub</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, fadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[6c]"></a>__aeabi_fmul</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, fmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_fmul
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialCheck
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_dadd</STRONG> (Thumb, 328 bytes, Stack size 48 bytes, dadd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = __aeabi_dadd &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lasr
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
<LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_drsub
<LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
</UL>

<P><STRONG><a name="[30]"></a>__aeabi_dsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[31]"></a>__aeabi_drsub</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, dadd.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[32]"></a>__aeabi_dmul</STRONG> (Thumb, 202 bytes, Stack size 72 bytes, dmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneStep
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[33]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialCheck
</UL>

<P><STRONG><a name="[78]"></a>__ARM_scalbn</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, dscalb.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __ARM_scalbn
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>scalbn</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, dscalb.o(.text), UNUSED)

<P><STRONG><a name="[34]"></a>__aeabi_i2f</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, fflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_i2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[35]"></a>__aeabi_ui2f</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, ffltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = __aeabi_ui2f &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialCheck
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_i2d</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, dflti.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_i2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneStep
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[37]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialCheck
</UL>

<P><STRONG><a name="[6d]"></a>__aeabi_f2iz</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, ffixi.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output
</UL>

<P><STRONG><a name="[73]"></a>__aeabi_f2uiz</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, ffixui.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialCheck
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[77]"></a>__aeabi_f2d</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, f2d.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[38]"></a>__aeabi_d2f</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, d2f.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_d2f
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialCheck
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneStep
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[7b]"></a>__aeabi_cfcmpeq</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[7c]"></a>__aeabi_cfcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[7d]"></a>__aeabi_cfrcmple</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, cfrcmple.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[88]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[2d]"></a>__aeabi_lasr</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, llsshr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_lasr
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[89]"></a>_ll_sshift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llsshr.o(.text), UNUSED)

<P><STRONG><a name="[8a]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[28]"></a>_float_round</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, fepilogue.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
</UL>

<P><STRONG><a name="[27]"></a>_float_epilogue</STRONG> (Thumb, 114 bytes, Stack size 12 bytes, fepilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = _float_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>

<P><STRONG><a name="[39]"></a>_frnd</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, frnd.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _frnd
</UL>
<BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_float_round
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>

<P><STRONG><a name="[2f]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[2e]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>

<P><STRONG><a name="[23]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[8b]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3b]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8c]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[3d]"></a>CalibrateEncoder</STRONG> (Thumb, 602 bytes, Stack size 840 bytes, main.o(i.CalibrateEncoder))
<BR><BR>[Stack]<UL><LI>Max Depth = 976<LI>Call Chain = CalibrateEncoder &rArr; OneStep &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAngle
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintString
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintShortInt
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneStep
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteHalfWord
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashUnlock
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashLock
<LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashErase32K
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output
<LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
</UL>

<P><STRONG><a name="[a]"></a>EXTI0_1_IRQHandler</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, stm32f0xx_it.o(i.EXTI0_1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = EXTI0_1_IRQHandler &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EXTI2_3_IRQHandler</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f0xx_it.o(i.EXTI2_3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = EXTI2_3_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_IsActiveFlag_0_31
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>FlashErase32K</STRONG> (Thumb, 196 bytes, Stack size 4 bytes, main.o(i.FlashErase32K))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FlashErase32K &rArr; FlashErasePage &rArr; FlashWaitDone
</UL>
<BR>[Calls]<UL><LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashErasePage
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[4a]"></a>FlashErasePage</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, main.o(i.FlashErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FlashErasePage &rArr; FlashWaitDone
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitDone
</UL>
<BR>[Called By]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashErase32K
</UL>

<P><STRONG><a name="[4c]"></a>FlashGetStatus</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, main.o(i.FlashGetStatus))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitDone
</UL>

<P><STRONG><a name="[47]"></a>FlashLock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.FlashLock))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[44]"></a>FlashUnlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, main.o(i.FlashUnlock))
<BR><BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[4b]"></a>FlashWaitDone</STRONG> (Thumb, 36 bytes, Stack size 4 bytes, main.o(i.FlashWaitDone))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FlashWaitDone
</UL>
<BR>[Calls]<UL><LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsDelay
<LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashGetStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWriteHalfWord
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashErasePage
</UL>

<P><STRONG><a name="[46]"></a>FlashWriteHalfWord</STRONG> (Thumb, 48 bytes, Stack size 12 bytes, main.o(i.FlashWriteHalfWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FlashWriteHalfWord &rArr; FlashWaitDone
</UL>
<BR>[Calls]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitDone
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.HardFault_Handler))
<BR><BR>[Calls]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>LL_EXTI_Init</STRONG> (Thumb, 156 bytes, Stack size 8 bytes, stm32f0xx_ll_exti.o(i.LL_EXTI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_EXTI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[5c]"></a>LL_GPIO_Init</STRONG> (Thumb, 168 bytes, Stack size 20 bytes, stm32f0xx_ll_gpio.o(i.LL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[4e]"></a>LL_Init1msTick</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, stm32f0xx_ll_utils.o(i.LL_Init1msTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_Init1msTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[4f]"></a>LL_RCC_GetSystemClocksFreq</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, stm32f0xx_ll_rcc.o(i.LL_RCC_GetSystemClocksFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LL_RCC_GetSystemClocksFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[53]"></a>LL_RCC_GetUSARTClockFreq</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, stm32f0xx_ll_rcc.o(i.LL_RCC_GetUSARTClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetPCLK1ClockFreq
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetHCLKClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
</UL>

<P><STRONG><a name="[64]"></a>LL_SPI_Init</STRONG> (Thumb, 92 bytes, Stack size 8 bytes, stm32f0xx_ll_spi.o(i.LL_SPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_SPI_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[7a]"></a>LL_SetSystemCoreClock</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f0xx_ll_utils.o(i.LL_SetSystemCoreClock))
<BR><BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[67]"></a>LL_TIM_Init</STRONG> (Thumb, 108 bytes, Stack size 20 bytes, stm32f0xx_ll_tim.o(i.LL_TIM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LL_TIM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[54]"></a>LL_TIM_OC_Init</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, stm32f0xx_ll_tim.o(i.LL_TIM_OC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = LL_TIM_OC_Init &rArr; OC4Config
</UL>
<BR>[Calls]<UL><LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC4Config
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC3Config
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC2Config
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[59]"></a>LL_USART_Init</STRONG> (Thumb, 156 bytes, Stack size 32 bytes, stm32f0xx_ll_usart.o(i.LL_USART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
</UL>

<P><STRONG><a name="[40]"></a>LL_mDelay</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_ll_utils.o(i.LL_mDelay))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_mDelay
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
<LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneStep
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[6b]"></a>Mod</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, main.o(i.Mod))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = Mod &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.NMI_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>OneStep</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, main.o(i.OneStep))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = OneStep &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[3f]"></a>Output</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, main.o(i.Output))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = Output &rArr; Mod &rArr; __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2iz
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Mod
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
</UL>
<BR>[Called By]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OneStep
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.PendSV_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>PrintShortInt</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, main.o(i.PrintShortInt))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = PrintShortInt &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutChar
<LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialCheck
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[3e]"></a>PrintString</STRONG> (Thumb, 20 bytes, Stack size 4 bytes, main.o(i.PrintString))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = PrintString
</UL>
<BR>[Calls]<UL><LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UartPutChar
</UL>
<BR>[Called By]<UL><LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialCheck
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[51]"></a>RCC_GetHCLKClockFreq</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f0xx_ll_rcc.o(i.RCC_GetHCLKClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[52]"></a>RCC_GetPCLK1ClockFreq</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_ll_rcc.o(i.RCC_GetPCLK1ClockFreq))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[50]"></a>RCC_GetSystemClockFreq</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, stm32f0xx_ll_rcc.o(i.RCC_GetSystemClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_PLL_GetFreqDomain_SYS
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetUSARTClockFreq
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_RCC_GetSystemClocksFreq
</UL>

<P><STRONG><a name="[6f]"></a>RCC_PLL_GetFreqDomain_SYS</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, stm32f0xx_ll_rcc.o(i.RCC_PLL_GetFreqDomain_SYS))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCC_GetSystemClockFreq
</UL>

<P><STRONG><a name="[41]"></a>ReadAngle</STRONG> (Thumb, 12 bytes, Stack size 4 bytes, main.o(i.ReadAngle))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ReadAngle
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadValue
</UL>
<BR>[Called By]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
</UL>

<P><STRONG><a name="[71]"></a>ReadState</STRONG> (Thumb, 10 bytes, Stack size 4 bytes, main.o(i.ReadState))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = ReadState
</UL>
<BR>[Calls]<UL><LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadValue
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
</UL>

<P><STRONG><a name="[70]"></a>ReadValue</STRONG> (Thumb, 80 bytes, Stack size 0 bytes, main.o(i.ReadValue))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadState
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadAngle
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SVC_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>SerialCheck</STRONG> (Thumb, 268 bytes, Stack size 16 bytes, main.o(i.SerialCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = SerialCheck &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintString
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintShortInt
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[74]"></a>SetModeCheck</STRONG> (Thumb, 256 bytes, Stack size 16 bytes, main.o(i.SetModeCheck))
<BR><BR>[Stack]<UL><LI>Max Depth = 992<LI>Call Chain = SetModeCheck &rArr; CalibrateEncoder &rArr; OneStep &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;WriteValue
<LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadState
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CalibrateEncoder
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_IsInputPinSet
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadValue
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>SystemClock_Config</STRONG> (Thumb, 190 bytes, Stack size 16 bytes, main.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = SystemClock_Config &rArr; LL_Init1msTick &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SetSystemCoreClock
<LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_Init1msTick
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[20]"></a>SystemInit</STRONG> (Thumb, 78 bytes, Stack size 0 bytes, system_stm32f0xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(.text)
</UL>
<P><STRONG><a name="[14]"></a>TIM6_IRQHandler</STRONG> (Thumb, 508 bytes, Stack size 32 bytes, stm32f0xx_it.o(i.TIM6_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = TIM6_IRQHandler &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2f
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2f
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fmul
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2uiz
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_f2d
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
<LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2f
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfrcmple
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmple
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cfcmpeq
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_scalbn
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ReadValue
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Output
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;roundf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f030x8.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>UartPutChar</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, main.o(i.UartPutChar))
<BR><BR>[Called By]<UL><LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintString
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PrintShortInt
</UL>

<P><STRONG><a name="[4d]"></a>UsDelay</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, main.o(i.UsDelay))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FlashWaitDone
</UL>

<P><STRONG><a name="[75]"></a>WriteValue</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, main.o(i.WriteValue))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = WriteValue
</UL>
<BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
</UL>

<P><STRONG><a name="[3a]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8d]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[8e]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[8f]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[1f]"></a>main</STRONG> (Thumb, 166 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 1016<LI>Call Chain = main &rArr; SetModeCheck &rArr; CalibrateEncoder &rArr; OneStep &rArr; __aeabi_dmul &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_mDelay
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SerialCheck
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP1_EnableClock
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[7e]"></a>roundf</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, roundf.o(i.roundf))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = roundf &rArr; __aeabi_fsub &rArr; __aeabi_fadd &rArr; _float_epilogue
</UL>
<BR>[Calls]<UL><LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fsub
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_fadd
<LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_frnd
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM6_IRQHandler
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[48]"></a>LL_EXTI_IsActiveFlag_0_31</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.LL_EXTI_IsActiveFlag_0_31))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[49]"></a>LL_GPIO_IsInputPinSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f0xx_it.o(i.LL_GPIO_IsInputPinSet))
<BR><BR>[Called By]<UL><LI><a href="#[b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI2_3_IRQHandler
<LI><a href="#[a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;EXTI0_1_IRQHandler
</UL>

<P><STRONG><a name="[5b]"></a>LL_AHB1_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.LL_AHB1_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[66]"></a>LL_APB1_GRP1_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.LL_APB1_GRP1_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_APB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[63]"></a>LL_APB1_GRP2_EnableClock</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, main.o(i.LL_APB1_GRP2_EnableClock))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_USART1_UART_Init
<LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_SPI1_Init
</UL>

<P><STRONG><a name="[76]"></a>LL_GPIO_IsInputPinSet</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, main.o(i.LL_GPIO_IsInputPinSet))
<BR><BR>[Called By]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetModeCheck
</UL>

<P><STRONG><a name="[5f]"></a>LL_GPIO_SetPinMode</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.LL_GPIO_SetPinMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_SetPinMode
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[5e]"></a>LL_GPIO_SetPinPull</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, main.o(i.LL_GPIO_SetPinPull))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_GPIO_SetPinPull
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[5d]"></a>LL_SYSCFG_SetEXTISource</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, main.o(i.LL_SYSCFG_SetEXTISource))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = LL_SYSCFG_SetEXTISource
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[69]"></a>LL_TIM_OC_DisableFast</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, main.o(i.LL_TIM_OC_DisableFast))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[68]"></a>LL_TIM_OC_EnablePreload</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, main.o(i.LL_TIM_OC_EnablePreload))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_TIM3_Init
</UL>

<P><STRONG><a name="[5a]"></a>MX_GPIO_Init</STRONG> (Thumb, 406 bytes, Stack size 56 bytes, main.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = MX_GPIO_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_EXTI_Init
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SYSCFG_SetEXTISource
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinPull
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_SetPinMode
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_AHB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[62]"></a>MX_SPI1_Init</STRONG> (Thumb, 144 bytes, Stack size 88 bytes, main.o(i.MX_SPI1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 108<LI>Call Chain = MX_SPI1_Init &rArr; LL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_SPI_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[65]"></a>MX_TIM3_Init</STRONG> (Thumb, 202 bytes, Stack size 96 bytes, main.o(i.MX_TIM3_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = MX_TIM3_Init &rArr; LL_TIM_OC_Init &rArr; OC4Config
</UL>
<BR>[Calls]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_EnablePreload
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_DisableFast
<LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP1_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[6a]"></a>MX_USART1_UART_Init</STRONG> (Thumb, 138 bytes, Stack size 72 bytes, main.o(i.MX_USART1_UART_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 140<LI>Call Chain = MX_USART1_UART_Init &rArr; LL_USART_Init &rArr; LL_RCC_GetUSARTClockFreq &rArr; RCC_GetSystemClockFreq &rArr; RCC_PLL_GetFreqDomain_SYS &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_USART_Init
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_GPIO_Init
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_APB1_GRP2_EnableClock
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>NVIC_SetPriority</STRONG> (Thumb, 60 bytes, Stack size 0 bytes, main.o(i.NVIC_SetPriority))
<BR><BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
</UL>

<P><STRONG><a name="[56]"></a>OC1Config</STRONG> (Thumb, 124 bytes, Stack size 12 bytes, stm32f0xx_ll_tim.o(i.OC1Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = OC1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[57]"></a>OC2Config</STRONG> (Thumb, 128 bytes, Stack size 16 bytes, stm32f0xx_ll_tim.o(i.OC2Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OC2Config
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[58]"></a>OC3Config</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, stm32f0xx_ll_tim.o(i.OC3Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OC3Config
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>

<P><STRONG><a name="[55]"></a>OC4Config</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f0xx_ll_tim.o(i.OC4Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = OC4Config
</UL>
<BR>[Called By]<UL><LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LL_TIM_OC_Init
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
